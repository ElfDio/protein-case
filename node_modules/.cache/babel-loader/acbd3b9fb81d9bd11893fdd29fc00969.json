{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects-Folder\\\\protein\\\\src\\\\App.js\";\nimport React from \"react\";\nimport bag from \"./Assets/sepet.svg\";\nimport Apple from \"./components/Apple\";\nimport Tree from \"./components/Tree\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apples = [{\n  id: 0,\n  coordinate: \"item1\"\n}, {\n  id: 1,\n  coordinate: \"item2\"\n}, {\n  id: 2,\n  coordinate: \"item3\"\n}, {\n  id: 3,\n  coordinate: \"item4\"\n}, {\n  id: 4,\n  coordinate: \"item5\"\n}, {\n  id: 5,\n  coordinate: \"item6\"\n}, {\n  id: 6,\n  coordinate: \"item7\"\n}, {\n  id: 7,\n  coordinate: \"item8\"\n}];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animation_tree: \"\",\n      animation_apple: \"apple\",\n      animation_point: \"\",\n      animation_box: \"\",\n      boxes: true\n    };\n\n    this.appleFallen = () => {\n      //ağaca tıkladığımda ağacın ve elmaların alacağı animasyonu tetikliyor..\n      this.setState({\n        animation_tree: \"point\"\n      });\n      this.setState({\n        animation_point: \"point\"\n      }); //belli bir süre sonra sallanan elmaların düşmesini söylüyor. Ve ağacın animasyonunu durdurmamızı sağlıyor.\n\n      setTimeout(() => {\n        this.setState({\n          animation_point: \"\"\n        });\n        this.setState({\n          animation_tree: \"fallen\"\n        });\n      }, 1000);\n    };\n  }\n\n  render() {\n    //Apple componentinin içerisinde bir if kontrolü sağlayarak classları kontrol ediyoruz. Default değerinde alacaklarını ve işleme göre hangi animasyonu\n    //çağıracağımızı söylüyoruz.\n    // this.appleFallen() methodumuz animasyonları çalıştırıyor.\n    const {\n      animation_tree,\n      animation_apple,\n      animation_point,\n      animation_box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [apples.map(i => {\n          return /*#__PURE__*/_jsxDEV(Apple, {\n            item: animation_tree === \"point\" ? animation_apple + \" point\" + \" \" + i.coordinate : animation_tree === \"fallen\" ? animation_apple + \" fallen\" + \" \" + i.coordinate : animation_apple + \" \" + i.coordinate\n          }, i.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Tree, {\n          item: animation_point,\n          onClick: () => this.appleFallen()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bag,\n          alt: \"\",\n          className: [\"bag\" + \" \" + animation_box]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projects-Folder/protein/src/App.js"],"names":["React","Apple","Tree","apples","id","coordinate","App","Component","state","animation_tree","animation_apple","animation_point","animation_box","boxes","appleFallen","setState","setTimeout","render","map","i","bag"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport bag from \"./Assets/sepet.svg\";\r\nimport Apple from \"./components/Apple\";\r\nimport Tree from \"./components/Tree\";\r\n\r\nconst apples = [{id: 0, coordinate : \"item1\"},{id: 1, coordinate : \"item2\"},{id: 2, coordinate : \"item3\"},{id: 3, coordinate : \"item4\"},{id: 4, coordinate : \"item5\"},\r\n  {id: 5, coordinate : \"item6\"},{id: 6, coordinate : \"item7\"},{id: 7, coordinate : \"item8\"}]\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    animation_tree : \"\",\r\n    animation_apple: \"apple\",\r\n    animation_point: \"\",\r\n    animation_box: \"\",\r\n    boxes: true,\r\n  }\r\n\r\n  appleFallen = () => {\r\n     //ağaca tıkladığımda ağacın ve elmaların alacağı animasyonu tetikliyor..\r\n    this.setState({animation_tree : \"point\"});\r\n    this.setState({animation_point : \"point\"});\r\n\r\n    //belli bir süre sonra sallanan elmaların düşmesini söylüyor. Ve ağacın animasyonunu durdurmamızı sağlıyor.\r\n    setTimeout(() => {\r\n      this.setState({animation_point : \"\"});\r\n      this.setState({animation_tree : \"fallen\"});\r\n    }, 1000);\r\n  }\r\n\r\n  render(){\r\n     //Apple componentinin içerisinde bir if kontrolü sağlayarak classları kontrol ediyoruz. Default değerinde alacaklarını ve işleme göre hangi animasyonu\r\n     //çağıracağımızı söylüyoruz.\r\n     // this.appleFallen() methodumuz animasyonları çalıştırıyor.\r\n    const { animation_tree, animation_apple, animation_point, animation_box } = this.state;\r\n    return(\r\n      <div className=\"box\"> \r\n        <div className=\"container\">\r\n       \r\n          {\r\n            apples.map(i => {\r\n              return(\r\n                <Apple key={i.id} item={animation_tree === \"point\" ? animation_apple + \" point\" + \" \" + i.coordinate : \r\n                animation_tree === \"fallen\" ? animation_apple + \" fallen\" + \" \" + i.coordinate :\r\n                animation_apple + \" \" + i.coordinate}/>\r\n              )\r\n            })\r\n          }\r\n          <Tree item={animation_point} onClick={() => this.appleFallen()}/>\r\n          <img src={bag} alt=\"\" className={[\"bag\" + \" \" + animation_box]}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}